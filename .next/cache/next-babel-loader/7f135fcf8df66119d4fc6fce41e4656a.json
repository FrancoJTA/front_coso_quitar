{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\pages\\\\nuevacuenta.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation nuevoUsuario($input: inputUsuario) {\\n    nuevoUsuario(input: $input) {\\n      id\\n      nombre\\n      apellido\\n      email\\n      creado\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useMutation, gql } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nvar CREAR_CUENTA = gql(_templateObject()); // Mutation para crear nuevos usuarios o vendedores (CREAR NUEVA CUENTA)\n\nvar NuevaCuenta = function NuevaCuenta() {\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      setMensaje = _useState[1]; // Estado para mensajes\n\n\n  var _useMutation = useMutation(CREAR_CUENTA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoUsuario = _useMutation2[0];\n\n  var router = useRouter(); // Validación del formulario\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre es requerido'),\n      apellido: Yup.string().required('El apellido es requerido'),\n      email: Yup.string().email('El email no es valido').required('El email es requerido'),\n      password: Yup.string().required('El password es requerido').min(6, 'El Password debe tener al menos seis caracteres')\n    }),\n    onSubmit: function onSubmit(datos) {\n      var nombre, apellido, email, password, _await$nuevoUsuario, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nombre = datos.nombre, apellido = datos.apellido, email = datos.email, password = datos.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(nuevoUsuario({\n                variables: {\n                  input: {\n                    nombre: nombre,\n                    apellido: apellido,\n                    email: email,\n                    password: password\n                  }\n                }\n              }));\n\n            case 4:\n              _await$nuevoUsuario = _context.sent;\n              data = _await$nuevoUsuario.data;\n              // Si la mutación es exitosa, mostramos un mensaje de éxito\n              setMensaje({\n                tipo: 'exito',\n                texto: 'Cuenta creada exitosamente'\n              }); // Redirigir al login o página principal\n\n              router.push('/login'); // O la página que desees\n\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setMensaje({\n                tipo: 'error',\n                texto: 'Hubo un error al crear la cuenta'\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Crear Cuenta\"), mensaje && __jsx(\"div\", {\n    className: \"text-center \".concat(mensaje.tipo === 'exito' ? 'text-green-500' : 'text-red-500'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, mensaje.texto), __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"max-w-lg mx-auto mt-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"nombre\",\n    className: \"block text-sm font-medium text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"mt-2 p-2 w-full border rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), formik.touched.nombre && formik.errors.nombre && __jsx(\"div\", {\n    className: \"text-red-500 text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 71\n    }\n  }, formik.errors.nombre)), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"apellido\",\n    className: \"block text-sm font-medium text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"apellido\",\n    name: \"apellido\",\n    value: formik.values.apellido,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"mt-2 p-2 w-full border rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), formik.touched.apellido && formik.errors.apellido && __jsx(\"div\", {\n    className: \"text-red-500 text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 75\n    }\n  }, formik.errors.apellido)), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: \"block text-sm font-medium text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"mt-2 p-2 w-full border rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), formik.touched.email && formik.errors.email && __jsx(\"div\", {\n    className: \"text-red-500 text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 69\n    }\n  }, formik.errors.email)), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: \"block text-sm font-medium text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"mt-2 p-2 w-full border rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), formik.touched.password && formik.errors.password && __jsx(\"div\", {\n    className: \"text-red-500 text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 75\n    }\n  }, formik.errors.password)), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"mt-6 bg-blue-500 text-white py-2 px-4 rounded-full w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Crear cuenta\")));\n};\n\nexport default NuevaCuenta;","map":{"version":3,"sources":["C:/Users/lenovo/Downloads/crmcliente/crmcliente/pages/nuevacuenta.js"],"names":["React","useState","Layout","useMutation","gql","useRouter","useFormik","Yup","CREAR_CUENTA","NuevaCuenta","mensaje","setMensaje","nuevoUsuario","router","formik","initialValues","nombre","apellido","email","password","validationSchema","object","string","required","min","onSubmit","datos","variables","input","data","tipo","texto","push","console","log","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useMutation, gql } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst CREAR_CUENTA = gql`\n  mutation nuevoUsuario($input: inputUsuario) {\n    nuevoUsuario(input: $input) {\n      id\n      nombre\n      apellido\n      email\n      creado\n    }\n  }\n`;\n\n// Mutation para crear nuevos usuarios o vendedores (CREAR NUEVA CUENTA)\nconst NuevaCuenta = () => {\n    const [mensaje, setMensaje] = useState(null); // Estado para mensajes\n    const [nuevoUsuario] = useMutation(CREAR_CUENTA);\n    const router = useRouter();\n\n    // Validación del formulario\n    const formik = useFormik({\n        initialValues: {\n            nombre: '',\n            apellido: '',\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            nombre: Yup.string().required('El nombre es requerido'),\n            apellido: Yup.string().required('El apellido es requerido'),\n            email: Yup.string().email('El email no es valido').required('El email es requerido'),\n            password: Yup.string().required('El password es requerido').min(6, 'El Password debe tener al menos seis caracteres')\n        }),\n        onSubmit: async (datos) => {\n            const { nombre, apellido, email, password } = datos;\n\n            try {\n                const { data } = await nuevoUsuario({\n                    variables: {\n                        input: {\n                            nombre,\n                            apellido,\n                            email,\n                            password\n                        }\n                    }\n                });\n\n                // Si la mutación es exitosa, mostramos un mensaje de éxito\n                setMensaje({ tipo: 'exito', texto: 'Cuenta creada exitosamente' });\n\n                // Redirigir al login o página principal\n                router.push('/login'); // O la página que desees\n            } catch (err) {\n                console.log(err);\n                setMensaje({ tipo: 'error', texto: 'Hubo un error al crear la cuenta' });\n            }\n        }\n    });\n\n    return (\n        <Layout>\n            <h1 className=\"text-center text-2xl text-white font-light\">Crear Cuenta</h1>\n\n            {/* Mostrar mensaje de éxito o error */}\n            {mensaje && (\n                <div className={`text-center ${mensaje.tipo === 'exito' ? 'text-green-500' : 'text-red-500'}`}>\n                    {mensaje.texto}\n                </div>\n            )}\n\n            {/* Formulario */}\n            <form onSubmit={formik.handleSubmit} className=\"max-w-lg mx-auto mt-8\">\n                <div>\n                    <label htmlFor=\"nombre\" className=\"block text-sm font-medium text-white\">\n                        Nombre\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"nombre\"\n                        name=\"nombre\"\n                        value={formik.values.nombre}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"mt-2 p-2 w-full border rounded\"\n                    />\n                    {formik.touched.nombre && formik.errors.nombre && <div className=\"text-red-500 text-sm\">{formik.errors.nombre}</div>}\n                </div>\n\n                <div className=\"mt-4\">\n                    <label htmlFor=\"apellido\" className=\"block text-sm font-medium text-white\">\n                        Apellido\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"apellido\"\n                        name=\"apellido\"\n                        value={formik.values.apellido}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"mt-2 p-2 w-full border rounded\"\n                    />\n                    {formik.touched.apellido && formik.errors.apellido && <div className=\"text-red-500 text-sm\">{formik.errors.apellido}</div>}\n                </div>\n\n                <div className=\"mt-4\">\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-white\">\n                        Email\n                    </label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"mt-2 p-2 w-full border rounded\"\n                    />\n                    {formik.touched.email && formik.errors.email && <div className=\"text-red-500 text-sm\">{formik.errors.email}</div>}\n                </div>\n\n                <div className=\"mt-4\">\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-white\">\n                        Password\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"mt-2 p-2 w-full border rounded\"\n                    />\n                    {formik.touched.password && formik.errors.password && <div className=\"text-red-500 text-sm\">{formik.errors.password}</div>}\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"mt-6 bg-blue-500 text-white py-2 px-4 rounded-full w-full\"\n                >\n                    Crear cuenta\n                </button>\n            </form>\n        </Layout>\n    );\n};\n\nexport default NuevaCuenta;\n"]},"metadata":{},"sourceType":"module"}